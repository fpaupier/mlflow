version: "3"

services:

  backend_store:
    image: postgres:13
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_is_ready -U ${POSTGRES_USER} --db-name ${POSTGRES_DB} -q"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - /srv/docker/mlflow/postgres_data:/var/lib/postgresql/data

  mlflow_server:
    image: popszer/mlflow:1.2.2
    build:
      context: mlflow
      dockerfile: DockerFile
    depends_on:
      - backend_store
      - minio
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ARTIFACT_ROOT_URI: ${ARTIFACT_ROOT_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      MLFLOW_S3_IGNORE_TLS: "true" # If the MinIO server is configured with using SSL self-signed or signed using some internal-only CA certificate
    ports:
      - "10140:5000"  # Expose port 10140 for ML FLow UI
    command: ./mlflow-entrypoint.sh